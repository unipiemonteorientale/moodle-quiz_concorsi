{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage modal to confirm actions or get additional data.\n *\n * @module      quiz_concorsi/actions\n * @copyright   2023 Roberto Pinna\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\n\nconst Selectors = {\n    askZipPassword: '[data-action=\"quiz_concorsi/ask_zip_password\"]',\n    password1: '[name=\"enteredpassword1\"]',\n    password2: '[name=\"enteredpassword2\"]',\n    errorMessage: '[data-action=\"quiz_concorsi/error_message\"]',\n    saveButton: '[data-action=\"save\"]',\n    zipPassword: '[name=\"archivepassword\"]',\n};\n\nexport const init = async () => {\n\n    var passwordString = await getString('password', 'core');\n    var againString = await getString('again', 'core');\n\n    var passwordsDifferString = await getString('passwordsdiffer', 'core');\n\n    const askPassword = await ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: getString('typepassword', 'quiz_concorsi'),\n        body: '<label for=\"enteredpassword1\">' + passwordString + '</label> '\n            + '<input type=\"password\" name=\"enteredpassword1\" /><br />'\n            + '<label for=\"enteredpassword2\">' + passwordString + ' (' + againString + ')</label> '\n            + '<input type=\"password\" name=\"enteredpassword2\" /><br />'\n            + '<span data-action=\"quiz_concorsi/error_message\" class=\"alert-warning\"></span>',\n        show: false,\n        removeOnClose: false,\n    });\n\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.askZipPassword)) {\n            e.preventDefault();\n\n            askPassword.show();\n\n            document.querySelector(Selectors.saveButton).disabled = true;\n\n            askPassword.getRoot().on(ModalEvents.save, () => {\n                if (document.querySelector(Selectors.password1).value == document.querySelector(Selectors.password2).value) {\n                    document.querySelector(Selectors.zipPassword).value = document.querySelector(Selectors.password1).value;\n                    document.querySelector(Selectors.askZipPassword).parentElement.submit();\n                }\n            });\n        }\n    });\n\n    document.addEventListener('keyup', e => {\n        if (e.target.closest(Selectors.password1) || e.target.closest(Selectors.password2)) {\n            document.querySelector(Selectors.saveButton).disabled = true;\n            if (document.querySelector(Selectors.password1).value != document.querySelector(Selectors.password2).value) {\n                document.querySelector(Selectors.errorMessage).innerText = passwordsDifferString;\n                document.querySelector(Selectors.saveButton).disabled = true;\n            } else {\n                document.querySelector(Selectors.errorMessage).innerText = \"\";\n                if (document.querySelector(Selectors.password1).value != '') {\n                    document.querySelector(Selectors.saveButton).disabled = false;\n                }\n            }\n        }\n    });\n};\n"],"names":["Selectors","async","passwordString","againString","passwordsDifferString","askPassword","ModalFactory","create","type","types","SAVE_CANCEL","title","body","show","removeOnClose","document","addEventListener","e","target","closest","preventDefault","querySelector","disabled","getRoot","on","ModalEvents","save","value","parentElement","submit","innerText"],"mappings":";;;;;;;kMA2BMA,yBACc,iDADdA,oBAES,4BAFTA,oBAGS,4BAHTA,uBAIY,8CAJZA,qBAKU,uBALVA,sBAMW,yCAGGC,cAEZC,qBAAuB,mBAAU,WAAY,QAC7CC,kBAAoB,mBAAU,QAAS,QAEvCC,4BAA8B,mBAAU,kBAAmB,cAEzDC,kBAAoBC,uBAAaC,OAAO,CAC1CC,KAAMF,uBAAaG,MAAMC,YACzBC,OAAO,mBAAU,eAAgB,iBACjCC,KAAM,iCAAmCV,eAAnC,iGAEmCA,eAAiB,KAAOC,YAF3D,iJAKNU,MAAM,EACNC,eAAe,IAGnBC,SAASC,iBAAiB,SAASC,IAC3BA,EAAEC,OAAOC,QAAQnB,4BACjBiB,EAAEG,iBAEFf,YAAYQ,OAEZE,SAASM,cAAcrB,sBAAsBsB,UAAW,EAExDjB,YAAYkB,UAAUC,GAAGC,sBAAYC,MAAM,KACnCX,SAASM,cAAcrB,qBAAqB2B,OAASZ,SAASM,cAAcrB,qBAAqB2B,QACjGZ,SAASM,cAAcrB,uBAAuB2B,MAAQZ,SAASM,cAAcrB,qBAAqB2B,MAClGZ,SAASM,cAAcrB,0BAA0B4B,cAAcC,iBAM/Ed,SAASC,iBAAiB,SAASC,KAC3BA,EAAEC,OAAOC,QAAQnB,sBAAwBiB,EAAEC,OAAOC,QAAQnB,wBAC1De,SAASM,cAAcrB,sBAAsBsB,UAAW,EACpDP,SAASM,cAAcrB,qBAAqB2B,OAASZ,SAASM,cAAcrB,qBAAqB2B,OACjGZ,SAASM,cAAcrB,wBAAwB8B,UAAY1B,sBAC3DW,SAASM,cAAcrB,sBAAsBsB,UAAW,IAExDP,SAASM,cAAcrB,wBAAwB8B,UAAY,GACF,IAArDf,SAASM,cAAcrB,qBAAqB2B,QAC5CZ,SAASM,cAAcrB,sBAAsBsB,UAAW"}